@model SOEN341InstagramReplica.Models.UserPost

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "UserPosts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.User_ID)
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2"><b>Current Image</b></p>
        <div class="col-md-10">
            @{
                var imgsrc = "";
                if (Model.POST != null)
                {
                    var base64 = Convert.ToBase64String(Model.POST);
                    imgsrc = string.Format("data:image/png;base64,{0}", base64);
                }
            }
            <img src='@imgsrc' class="control-label col-md-2" style="max-width:200px;max-height:200px" />
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

    <div>
        @Html.ActionLink("Back to List", "Details2", "Users", new { id = Model.User_ID }, null)
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
